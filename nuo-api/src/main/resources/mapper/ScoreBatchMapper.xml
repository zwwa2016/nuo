<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yinuo.mapper.ScoreBatchMapper">

	<resultMap id="scoreBatchMap" type="ScoreBatch">
		<result property="id" column="pk_id" />
		<result property="examId" column="fk_exam_id" />
		<result property="schoolId" column="fk_school_id" />
		<result property="classId" column="fk_class_id" />
		<result property="managerId" column="fk_manager_id" />
		<result property="createTime" column="create_time" />

		<result property="state" column="state" />
		<result property="subject" column="subject" />
		<result property="fixManagerId" column="fk_fix_manager_id" />
		<result property="fixTime" column="fix_time" />
	</resultMap>
	
    <insert id="insert" parameterType="ScoreBatch" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_score_batch(`fk_exam_id`, `type`, `fk_school_id`, `fk_class_id`, `fk_manager_id`, `create_time`,
		`state`, `subject`, `fk_fix_manager_id`, `fix_time`)
		VALUES(#{examId}, #{type}, #{schoolId}, #{classId}, #{managerId}, #{createTime},
		#{state}, #{subject}, #{fixManagerId}, #{fixTime})
	</insert>
	<select id="selectOne" parameterType="Map" resultMap="scoreBatchMap">
		SELECT * 
		FROM t_score_batch
		WHERE pk_id = #{id}
	</select>
	
	<select id="selectListByPage" parameterType="Map" resultMap="scoreBatchMap">
        SELECT * 
        FROM t_score_batch
        order by pk_id desc
        LIMIT #{limit}
        OFFSET #{offset}
    </select>
    <select id="selectListByIds" parameterType="Map" resultMap="scoreBatchMap">
        SELECT * 
        FROM t_score_batch
        WHERE pk_id IN
	    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </select>
    <select id="countListByIds" parameterType="Map" resultType="Integer">
        SELECT count(1)
        FROM t_score_batch
        WHERE pk_id IN
	    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </select>
	<update id="update" parameterType="ScoreBatch">
		UPDATE t_score_batch
		SET `fk_exam_id` = #{examId},
		`type` = #{type},
		`fk_school_id` = #{schoolId},
		`fk_class_id` = #{classId},
		`fk_manager_id` = #{managerId},
		`create_time` = #{createTime},
		`state` = #{state},
		`subject` = #{subject},
		`fk_fix_manager_id` = #{fixManagerId},
		`fix_time` = #{fixTime}
		WHERE pk_id = #{id}
	</update>

	<delete id="delete" parameterType="Map">
		delete from t_score_batch
		where pk_id = #{id}
	</delete>
	
	<delete id="deleteAll">
		delete from t_score_batch
    </delete>
	<select id="selectBySchoolId" parameterType="Map" resultMap="scoreBatchMap">
		SELECT *
		FROM t_score_batch
		WHERE fk_school_id = #{schoolId}
		<if test="type > 0">
			and `type` = #{type}
		</if>
		limit #{limit} offset #{offset}
	</select>
	<select id="countBySchoolId" parameterType="Map" resultType="Integer">
		SELECT count(1)
		FROM t_score_batch
		WHERE fk_school_id = #{schoolId}
		<if test="type > 0">
			and `type` = #{type}
		</if>
	</select>
	<select id="selectByClassId" parameterType="Map" resultMap="scoreBatchMap">
		SELECT *
		FROM t_score_batch
		WHERE fk_class_id = #{classId}
		<if test="type > 0">
			and `type` = #{type}
		</if>
		limit #{limit} offset #{offset}
	</select>
	<select id="countByClassId" parameterType="Map" resultType="Integer">
		SELECT count(1)
		FROM t_score_batch
		WHERE fk_class_id = #{classId}
		<if test="type > 0">
			and `type` = #{type}
		</if>
	</select>
	<select id="selectByExamId" parameterType="Map" resultMap="scoreBatchMap">
		SELECT *
		FROM t_score_batch
		WHERE fk_exam_id = #{examId}
		limit #{limit} offset #{offset}
	</select>
	<select id="countByExamId" parameterType="Map" resultType="Integer">
		SELECT count(1)
		FROM t_score_batch
		WHERE fk_exam_id = #{examId}
	</select>
	<select id="selectByState" parameterType="Map" resultMap="scoreBatchMap">
		SELECT *
		FROM t_score_batch
		WHERE `state` = #{state}
		limit #{limit}
	</select>
	<update id="updateBatch" parameterType="Map">
		UPDATE t_score_batch
		SET `state` = #{state},
		`fix_time` = #{fixTime}
		WHERE pk_id IN
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>

	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO t_score_batch(`type`, `fk_exam_id`, `fk_school_id`, `fk_class_id`, `fk_manager_id`, `create_time`,
		`state`, `subject`, `fk_fix_manager_id`, `fix_time`)
		VALUES
		<foreach collection ="scoreBatches" item="item" index= "index" separator =",">
		(#{item.type}, #{item.examId}, #{item.schoolId}, #{item.classId}, #{item.managerId}, #{item.createTime},
		#{item.state}, #{item.subject}, #{item.fixManagerId}, #{item.fixTime})
		</foreach>
	</insert>
</mapper>