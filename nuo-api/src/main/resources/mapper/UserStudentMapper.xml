<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yinuo.mapper.UserStudentMapper">

	<resultMap id="userStudentMap" type="UserStudent">
		<result property="id" column="pk_id" />
		<result property="relationship" column="relationship" />
		<result property="studentId" column="fk_student_id" />
		<result property="userId" column="fk_user_id" />
		<result property="schoolId" column="fk_school_id" />
		<result property="classId" column="fk_class_id" />
		<result property="createTime" column="create_time" />
	</resultMap>
	
    <insert id="insert" parameterType="UserStudent" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_user_student(`relationship`, `fk_student_id`, `fk_user_id`, `fk_school_id`, `fk_class_id`, `create_time`)
		VALUES(#{relationship}, #{studentId}, #{userId}, #{schoolId}, #{classId}, #{createTime})
	</insert>
	<select id="selectOne" parameterType="Map" resultMap="userStudentMap">
		SELECT * 
		FROM t_user_student
		WHERE pk_id = #{id}
	</select>
	
	<select id="selectListByPage" parameterType="Map" resultMap="userStudentMap">
        SELECT * 
        FROM t_user_student
        order by pk_id desc
        LIMIT #{limit}
        OFFSET #{offset}
    </select>
    <select id="selectListByIds" parameterType="Map" resultMap="userStudentMap">
        SELECT * 
        FROM t_user_student
        WHERE pk_id IN
	    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </select>
    <select id="countListByIds" parameterType="Map" resultType="Integer">
        SELECT count(1)
        FROM t_user_student
        WHERE pk_id IN
	    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </select>
	<update id="update" parameterType="UserStudent">
		UPDATE t_user_student
		SET `relationship` = #{relationship},
		`fk_student_id` = #{studentId},
		`fk_user_id` = #{userId},
		`fk_school_id` = #{schoolId},
		`fk_class_id` = #{classId},
		`create_time` = #{createTime}
		WHERE pk_id = #{id}
	</update>

	<delete id="delete" parameterType="Map">
		delete from t_user_student
		where pk_id = #{id}
	</delete>
	
	<delete id="deleteAll">
		delete from t_user_student
    </delete>
	
	<select id="selectListByUserid" parameterType="Map" resultMap="userStudentMap">
        SELECT * 
        FROM t_user_student
        where 1 = 1
        <if test="userId > 0">
	    	and fk_user_id = #{userId}
        </if>
        <if test="studentId > 0">
	    	and fk_student_id = #{studentId}
        </if>
        order by pk_id desc
    </select>
	
	<select id="countListByUserid" parameterType="Map" resultType="Integer">
        SELECT count(1) 
        FROM t_user_student
        where 1 = 1
        <if test="userId > 0">
	    	and fk_user_id = #{userId}
        </if>
        <if test="studentId > 0">
	    	and fk_student_id = #{studentId}
        </if>
    </select>
	<select id="selectByStudentids" parameterType="Map" resultMap="userStudentMap">
		SELECT *
		FROM t_user_student
		WHERE fk_student_id IN
		<foreach item="item" index="index" collection="studentIds" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<delete id="deleteByStudentId" parameterType="Map">
		delete from t_user_student
		where `fk_student_id` = #{studentId}
	</delete>
</mapper>